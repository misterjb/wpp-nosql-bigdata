MongoDB Imports:

mongoimport -d instacart_2017_05_01 -c aisles --type csv --file aisles.csv --headerline
mongoimport -d instacart_2017_05_01 -c departments --type csv --file departments.csv --headerline
mongoimport -d instacart_2017_05_01 -c order_products__prior --type csv --file order_products__prior.csv --headerline
mongoimport -d instacart_2017_05_01 -c orders --type csv --file orders.csv --headerline
mongoimport -d instacart_2017_05_01 -c products --type csv --file products.csv --headerline

MongoDB Queries:

1. Top10 Produkte

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$group: {
			   _id : '$product_id', count : {$sum : 1}
			}
		},
		// Stage 2
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 3
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 4
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 5
		{
			$lookup: {
			    "from" : "aisles",
			    "localField" : "products.aisle_id",
			    "foreignField" : "aisle_id",
			    "as" : "aisles"
			}
		},
		// Stage 6
		{
			$unwind: {
			    path : "$aisles"
			}
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "departments",
			    "localField" : "products.department_id",
			    "foreignField" : "department_id",
			    "as" : "departments"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$departments" 
			}
		},
		// Stage 9
		{
			$limit: 10
		},
		// Stage 10
		{
			$project: {
			    _id:0,
			    id: "$products.product_id",
			    name: "$products.product_name",
			    aisle: "$aisles.aisle",
			    department: "$departments.department",
			    "count":1
			}
		},
	]
);

2.1 Wer #1 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":24852
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.2 Wer #2 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":13176
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},

		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.3 Wer #3 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":21137
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.4 Wer #4 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":21903
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.5 Wer #5 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":47209
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.6 Wer #6 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":47766
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.7 Wer #7 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":47626
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.8 Wer #8 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":16797
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.9 Wer #9 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":26209
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.10 Wer #10 kauft, kauft auch

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				"product_id":27845
			}
		},
		// Stage 2
		{
			$lookup: {
			    "from" : "order_products__prior",
			    "localField" : "order_id",
			    "foreignField" : "order_id",
			    "as" : "orders"
			}
		},
		// Stage 3
		{
			$unwind: {
			    path : "$orders"
			}
		},
		// Stage 4
		{
			$group: {
			    _id : '$orders.product_id', count : {$sum : 1}
			}
		},
		// Stage 5
		{
			$sort: {
				count: -1
			}
		},
		// Stage 6
		{
			$limit: 10
		},
		// Stage 7
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 8
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 9
		{
			$project: {
			    _id:0,
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

2.11 Ergebnisse von 2.1-2.10 als neo4j create

Create(Banana:Produkt { name: 'Banana' }),
(BagofOrganicBananas:Produkt { name: 'BagofOrganicBananas' }),
(OrganicStrawberries:Produkt { name: 'OrganicStrawberries' }),
(OrganicBabySpinach:Produkt { name: 'OrganicBabySpinach' }),
(OrganicHassAvocado:Produkt { name: 'OrganicHassAvocado' }),
(OrganicAvocado:Produkt { name: 'OrganicAvocado' }),
(LargeLemon:Produkt { name: 'LargeLemon' }),
(Strawberries:Produkt { name: 'Strawberries' }),
(Limes:Produkt { name: 'Limes' }),
(OrganicWholeMilk:Produkt { name: 'OrganicWholeMilk' }),
(OrganicFujiApple:Produkt { name: 'OrganicFujiApple' }),
(CucumberKirby:Produkt { name: 'CucumberKirby' }),
(Raspberries:Produkt { name: 'Raspberries' }),
(OrganicRaspberries:Produkt { name: 'OrganicRaspberries' }),
(OrganicYellowOnion:Produkt { name: 'OrganicYellowOnion' }),
(AppleHoneycrispOrganic:Produkt { name: 'AppleHoneycrispOrganic' }),
(OrganicLargeExtraFancyFujiApple:Produkt { name: 'OrganicLargeExtraFancyFujiApple' }),
(OrganicBlueberries:Produkt { name: 'OrganicBlueberries' }),
(OrganicGarlic:Produkt { name: 'OrganicGarlic' }),
(OrganicZucchini:Produkt { name: 'OrganicZucchini' }),
(OrganicLemon:Produkt { name: 'OrganicLemon' }),
(SeedlessRedGrapes:Produkt { name: 'SeedlessRedGrapes' }),
(Blueberries:Produkt { name: 'Blueberries' }),
(OrganicCilantro:Produkt { name: 'OrganicCilantro' }),
(OrganicWholeStringCheese:Produkt { name: 'OrganicWholeStringCheese' }),

((Banana) -[:gekauftmit]-> (OrganicStrawberries)),
((Banana) -[:gekauftmit]-> (OrganicAvocado)),
((Banana) -[:gekauftmit]-> (OrganicBabySpinach)),
((Banana) -[:gekauftmit]-> (Strawberries)),
((Banana) -[:gekauftmit]-> (LargeLemon)),
((Banana) -[:gekauftmit]-> (OrganicFujiApple)),
((Banana) -[:gekauftmit]-> (CucumberKirby)),
((Banana) -[:gekauftmit]-> (Limes)),
((Banana) -[:gekauftmit]-> (OrganicWholeMilk)),

((BagofOrganicBananas) -[:gekauftmit]-> (OrganicHassAvocado)),
((BagofOrganicBananas) -[:gekauftmit]-> (OrganicStrawberries)),
((BagofOrganicBananas) -[:gekauftmit]-> (OrganicBabySpinach)),
((BagofOrganicBananas) -[:gekauftmit]-> (OrganicRaspberries)),
((BagofOrganicBananas) -[:gekauftmit]-> (OrganicWholeMilk)),
((BagofOrganicBananas) -[:gekauftmit]-> (OrganicYellowOnion)),
((BagofOrganicBananas) -[:gekauftmit]-> (AppleHoneycrispOrganic)),
((BagofOrganicBananas) -[:gekauftmit]-> (OrganicLargeExtraFancyFujiApple)),
((BagofOrganicBananas) -[:gekauftmit]-> (OrganicAvocado)),

((OrganicStrawberries) -[:gekauftmit]-> (BagofOrganicBananas)),
((OrganicStrawberries) -[:gekauftmit]-> (Banana)),
((OrganicStrawberries) -[:gekauftmit]-> (OrganicHassAvocado)),
((OrganicStrawberries) -[:gekauftmit]-> (OrganicBabySpinach)),
((OrganicStrawberries) -[:gekauftmit]-> (OrganicRaspberries)),
((OrganicStrawberries) -[:gekauftmit]-> (OrganicAvocado)),
((OrganicStrawberries) -[:gekauftmit]-> (OrganicWholeMilk)),
((OrganicStrawberries) -[:gekauftmit]-> (OrganicBlueberries)),
((OrganicStrawberries) -[:gekauftmit]-> (Limes)),

((OrganicBabySpinach) -[:gekauftmit]-> (Banana)),
((OrganicBabySpinach) -[:gekauftmit]-> (BagofOrganicBananas)),
((OrganicBabySpinach) -[:gekauftmit]-> (OrganicStrawberries)),
((OrganicBabySpinach) -[:gekauftmit]-> (OrganicHassAvocado)),
((OrganicBabySpinach) -[:gekauftmit]-> (OrganicAvocado)),
((OrganicBabySpinach) -[:gekauftmit]-> (LargeLemon)),
((OrganicBabySpinach) -[:gekauftmit]-> (OrganicGarlic)),
((OrganicBabySpinach) -[:gekauftmit]-> (Limes)),
((OrganicBabySpinach) -[:gekauftmit]-> (OrganicZucchini)),

((OrganicHassAvocado) -[:gekauftmit]-> (BagofOrganicBananas)),
((OrganicHassAvocado) -[:gekauftmit]-> (OrganicStrawberries)),
((OrganicHassAvocado) -[:gekauftmit]-> (OrganicBabySpinach)),
((OrganicHassAvocado) -[:gekauftmit]-> (Banana)),
((OrganicHassAvocado) -[:gekauftmit]-> (OrganicRaspberries)),
((OrganicHassAvocado) -[:gekauftmit]-> (OrganicLemon)),
((OrganicHassAvocado) -[:gekauftmit]-> (Limes)),
((OrganicHassAvocado) -[:gekauftmit]-> (OrganicYellowOnion)),
((OrganicHassAvocado) -[:gekauftmit]-> (OrganicGarlic)),

((OrganicAvocado) -[:gekauftmit]-> (Banana)),
((OrganicAvocado) -[:gekauftmit]-> (OrganicBabySpinach)),
((OrganicAvocado) -[:gekauftmit]-> (LargeLemon)),
((OrganicAvocado) -[:gekauftmit]-> (OrganicStrawberries)),
((OrganicAvocado) -[:gekauftmit]-> (BagofOrganicBananas)),
((OrganicAvocado) -[:gekauftmit]-> (Limes)),
((OrganicAvocado) -[:gekauftmit]-> (CucumberKirby)),
((OrganicAvocado) -[:gekauftmit]-> (OrganicGarlic)),
((OrganicAvocado) -[:gekauftmit]-> (OrganicWholeMilk)),

((LargeLemon) -[:gekauftmit]-> (Banana)),
((LargeLemon) -[:gekauftmit]-> (Limes)),
((LargeLemon) -[:gekauftmit]-> (OrganicAvocado)),
((LargeLemon) -[:gekauftmit]-> (OrganicBabySpinach)),
((LargeLemon) -[:gekauftmit]-> (BagofOrganicBananas)),
((LargeLemon) -[:gekauftmit]-> (OrganicStrawberries)),
((LargeLemon) -[:gekauftmit]-> (OrganicGarlic)),
((LargeLemon) -[:gekauftmit]-> (OrganicHassAvocado)),
((LargeLemon) -[:gekauftmit]-> (CucumberKirby)),

((Strawberries) -[:gekauftmit]-> (Banana)),
((Strawberries) -[:gekauftmit]-> (BagofOrganicBananas)),
((Strawberries) -[:gekauftmit]-> (OrganicBabySpinach)),
((Strawberries) -[:gekauftmit]-> (OrganicAvocado)),
((Strawberries) -[:gekauftmit]-> (Raspberries)),
((Strawberries) -[:gekauftmit]-> (LargeLemon)),
((Strawberries) -[:gekauftmit]-> (SeedlessRedGrapes)),
((Strawberries) -[:gekauftmit]-> (OrganicBlueberries)),
((Strawberries) -[:gekauftmit]-> (Blueberries)),

((Limes) -[:gekauftmit]-> (Banana)),
((Limes) -[:gekauftmit]-> (LargeLemon)),
((Limes) -[:gekauftmit]-> (OrganicAvocado)),
((Limes) -[:gekauftmit]-> (BagofOrganicBananas)),
((Limes) -[:gekauftmit]-> (OrganicBabySpinach)),
((Limes) -[:gekauftmit]-> (OrganicHassAvocado)),
((Limes) -[:gekauftmit]-> (OrganicStrawberries)),
((Limes) -[:gekauftmit]-> (OrganicCilantro)),
((Limes) -[:gekauftmit]-> (OrganicGarlic)),

((OrganicWholeMilk) -[:gekauftmit]-> (Banana)),
((OrganicWholeMilk) -[:gekauftmit]-> (BagofOrganicBananas)),
((OrganicWholeMilk) -[:gekauftmit]-> (OrganicStrawberries)),
((OrganicWholeMilk) -[:gekauftmit]-> (OrganicBabySpinach)),
((OrganicWholeMilk) -[:gekauftmit]-> (OrganicHassAvocado)),
((OrganicWholeMilk) -[:gekauftmit]-> (OrganicAvocado)),
((OrganicWholeMilk) -[:gekauftmit]-> (OrganicRaspberries)),
((OrganicWholeMilk) -[:gekauftmit]-> (LargeLemon)),
((OrganicWholeMilk) -[:gekauftmit]-> (OrganicWholeStringCheese))

3. Top10 Tage von Bestellungen

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$group: {
			   _id : '$order_dow', count : {$sum : 1}
			}
		},
		// Stage 2
		{
			$sort: {
				count: -1
			}
		},
		// Stage 3
		{
			$limit: 10
		},
	]
);

4. Top 10 Uhrzeiten von Bestellungen

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$group: {
			   _id : '$order_hour_of_day', count : {$sum : 1}
			}
		},
		// Stage 2
		{
			$sort: {
			    count: -1
			}
		},
	]
);

5.1 Top10 Uhrzeiten von #1 Tage von Bestellungen

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				'order_dow': 0
			}
		},
		// Stage 2
		{
			$group: {
			   _id : '$order_hour_of_day', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: -1
			}
		},
	
		// Stage 4
		{
			$limit:  10
		},
	]
);

5.2 Top10 Uhrzeiten von #2 Tage von Bestellungen

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				'order_dow': 1
			}
		},
		// Stage 2
		{
			$group: {
			   _id : '$order_hour_of_day', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 4
		{
			$limit:  10
		},
	]
);

5.3 Top10 Uhrzeiten von #3 Tage von Bestellungen

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				'order_dow': 2
			}
		},
		// Stage 2
		{
			$group: {
			   _id : '$order_hour_of_day', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 4
		{
			$limit:  10
		},
	]
);

5.4 Bottom10 Uhrzeiten von #4 Tage von Bestellungen

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
			    'order_dow': 4
			}
		},
		// Stage 2
		{
			$group: {
			   _id : '$order_hour_of_day', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: 1
			}
		},
		// Stage 4
		{
			$limit: 10
		},
	]
);

5.5 Bottom10 Uhrzeiten von #3 Tage von Bestellungen

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
			    'order_dow': 3
			}
		},
		// Stage 2
		{
			$group: {
			   _id : '$order_hour_of_day', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: 1
			}
		},
		// Stage 4
		{
			$limit: 10
		},
	]
);

5.6 Bottom10 Uhrzeiten von #6 Tage von Bestellungen

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
			    'order_dow': 6
			}
		},
		// Stage 2
		{
			$group: {
			   _id : '$order_hour_of_day', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: 1
			}
		},
		// Stage 4
		{
			$limit: 10
		},
	]
);

6. top10 nach wie vielen tagen wieder bestellt wurde

db.orders.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$group: {
			    _id : '$days_since_prior_order', count : {$sum : 1}
			}
		},
		// Stage 2
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 3
		{
			$limit: 10
		},
	]
);

7.1 top10 Produkte die als #1 in Warenkorb gelegt wurden

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
			    add_to_cart_order : 1
			}
		},
		// Stage 2
		{
			$group: {
			    _id : '$product_id', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 4
		{
			$limit: 10
		},
		// Stage 5
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 6
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 7
		{
			$project: {
			    _id:0,
			    id: "$products.product_id",
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

7.2 top10 Produkte die als #2 in Warenkorb gelegt wurden

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
			    add_to_cart_order : 2
			}
		},
		// Stage 2
		{
			$group: {
			    _id : '$product_id', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 4
		{
			$limit: 10
		},
		// Stage 5
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 6
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 7
		{
			$project: {
			    _id:0,
			    id: "$products.product_id",
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

7.3 top10 Produkte die als #3 in Warenkorb gelegt wurden

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
			    add_to_cart_order : 3
			}
		},
		// Stage 2
		{
			$group: {
			    _id : '$product_id', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 4
		{
			$limit: 10
		},
		// Stage 5
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 6
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 7
		{
			$project: {
			    _id:0,
			    id: "$products.product_id",
			    name: "$products.product_name",
			    "count":1
			}
		},
	]
);

8.1 Top25 Produkte die nicht wieder bestellt wurden

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				reordered: 0
			}
		},
		// Stage 2
		{
			$group: {
			   _id : '$product_id', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 4
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 5
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 6
		{
			$lookup: {
			    "from" : "aisles",
			    "localField" : "products.aisle_id",
			    "foreignField" : "aisle_id",
			    "as" : "aisles"
			}
		},
		// Stage 7
		{
			$unwind: {
			    path : "$aisles"
			}
		},
		// Stage 8
		{
			$lookup: {
			    "from" : "departments",
			    "localField" : "products.department_id",
			    "foreignField" : "department_id",
			    "as" : "departments"
			}
		},
		// Stage 9
		{
			$unwind: {
			    path : "$departments" 
			}
		},
		// Stage 10
		{
			$limit: 25
		},
		// Stage 11
		{
			$project: {
			    _id:0,
			    id: "$products.product_id",
			    name: "$products.product_name",
			    aisle: "$aisles.aisle",
			    department: "$departments.department",
			    "count":1
			}
		},
	]
);

8.2 Top25 Produkte die wieder bestellt wurden

db.order_products__prior.aggregate(
	// Pipeline
	[
		// Stage 1
		{
			$match: {
				reordered: 1
			}
		},
		// Stage 2
		{
			$group: {
			   _id : '$product_id', count : {$sum : 1}
			}
		},
		// Stage 3
		{
			$sort: {
			    count: -1
			}
		},
		// Stage 4
		{
			$lookup: {
			    "from" : "products",
			    "localField" : "_id",
			    "foreignField" : "product_id",
			    "as" : "products"
			}
		},
		// Stage 5
		{
			$unwind: {
			    path : "$products"
			}
		},
		// Stage 6
		{
			$lookup: {
			    "from" : "aisles",
			    "localField" : "products.aisle_id",
			    "foreignField" : "aisle_id",
			    "as" : "aisles"
			}
		},
		// Stage 7
		{
			$unwind: {
			    path : "$aisles"
			}
		},
		// Stage 8
		{
			$lookup: {
			    "from" : "departments",
			    "localField" : "products.department_id",
			    "foreignField" : "department_id",
			    "as" : "departments"
			}
		},
		// Stage 9
		{
			$unwind: {
			    path : "$departments" 
			}
		},
		// Stage 10
		{
			$limit: 25
		},
		// Stage 11
		{
			$project: {
			    _id:0,
			    id: "$products.product_id",
			    name: "$products.product_name",
			    aisle: "$aisles.aisle",
			    department: "$departments.department",
			    "count":1
			}
		},
	]
);